#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
namespace Avatars.CodeActions
{
    partial class CodeFixes
    {
        public static partial class All
        {
            public const string AddAwait = "AddAwait";
            public const string AddBraces = "AddBraces";
            public const string AddDocCommentNodes = "AddDocCommentNodes";
            public const string AddExplicitCast = "AddExplicitCast";
            public const string AddImport = "AddImport";
            public const string AddMissingReference = "AddMissingReference";
            public const string AddNew = "AddNew";
            public const string AddOverloads = "AddOverloads";
            public const string AddParameter = "AddParameter";
            public const string AddParenthesesAroundConditionalExpressionInInterpolatedString = "AddParenthesesAroundConditionalExpressionInInterpolatedString";
            public const string AliasAmbiguousType = "AliasAmbiguousType";
            public const string ApplyNamingStyle = "ApplyNamingStyle";
            public const string ChangeReturnType = "ChangeReturnType";
            public const string ChangeToYield = "ChangeToYield";
            public const string ConvertToAsync = "ConvertToAsync";
            public const string ConvertToIterator = "ConvertToIterator";
            public const string ConvertTypeOfToNameOf = "ConvertTypeOfToNameOf";
            public const string CorrectNextControlVariable = "CorrectNextControlVariable";
            public const string CSharpAddObsoleteAttributeCodeFixProvider = "CSharpAddObsoleteAttributeCodeFixProvider";
            public const string CSharpConvertAnonymousTypeToTupleCodeFixProvider = "CSharpConvertAnonymousTypeToTupleCodeFixProvider";
            public const string CSharpConvertTypeOfToNameOfCodeFixProvider = "CSharpConvertTypeOfToNameOfCodeFixProvider";
            public const string CSharpFileHeaderCodeFixProvider = "CSharpFileHeaderCodeFixProvider";
            public const string CSharpMakeClassAbstractCodeFixProvider = "CSharpMakeClassAbstractCodeFixProvider";
            public const string CSharpMakeMemberStaticCodeFixProvider = "CSharpMakeMemberStaticCodeFixProvider";
            public const string CSharpUseAutoPropertyCodeFixProvider = "CSharpUseAutoPropertyCodeFixProvider";
            public const string DeclareAsNullable = "DeclareAsNullable";
            public const string FixFormatting = "FixFormatting";
            public const string FixIncorrectExitContinue = "FixIncorrectExitContinue";
            public const string FixIncorrectFunctionReturnType = "FixIncorrectFunctionReturnType";
            public const string FixReturnType = "FixReturnType";
            public const string FullyQualify = "FullyQualify";
            public const string GenerateConstructor = "GenerateConstructor";
            public const string GenerateConversion = "GenerateConversion";
            public const string GenerateDeconstructMethod = "GenerateDeconstructMethod";
            public const string GenerateEndConstruct = "GenerateEndConstruct";
            public const string GenerateEnumMember = "GenerateEnumMember";
            public const string GenerateEvent = "GenerateEvent";
            public const string GenerateMethod = "GenerateMethod";
            public const string GenerateType = "GenerateType";
            public const string GenerateVariable = "GenerateVariable";
            public const string ImplementAbstractClass = "ImplementAbstractClass";
            public const string ImplementInterface = "ImplementInterface";
            public const string InvokeDelegateWithConditionalAccessCodeFixProvider = "InvokeDelegateWithConditionalAccessCodeFixProvider";
            public const string MakeFieldReadonly = "MakeFieldReadonly";
            public const string MakeLocalFunctionStaticCodeFixProvider = "MakeLocalFunctionStaticCodeFixProvider";
            public const string MakeMethodSynchronous = "MakeMethodSynchronous";
            public const string MakeStatementAsynchronous = "MakeStatementAsynchronous";
            public const string MakeStructFieldsWritable = "MakeStructFieldsWritable";
            public const string MoveMisplacedUsingDirectives = "MoveMisplacedUsingDirectives";
            public const string MoveToTopOfFile = "MoveToTopOfFile";
            public const string PassInCapturedVariablesAsArgumentsCodeFixProvider = "PassInCapturedVariablesAsArgumentsCodeFixProvider";
            public const string PopulateSwitch = "PopulateSwitch";
            public const string PreferFrameworkType = "PreferFrameworkType";
            public const string QualifyMemberAccess = "QualifyMemberAccess";
            public const string RemoveAsyncModifier = "RemoveAsyncModifier";
            public const string RemoveDocCommentNode = "RemoveDocCommentNode";
            public const string RemoveIn = "RemoveIn";
            public const string RemoveNew = "RemoveNew";
            public const string RemoveUnnecessaryAttributeSuppressions = "RemoveUnnecessaryAttributeSuppressions";
            public const string RemoveUnnecessaryCast = "RemoveUnnecessaryCast";
            public const string RemoveUnnecessaryImports = "RemoveUnnecessaryImports";
            public const string RemoveUnnecessaryPragmaSuppressions = "RemoveUnnecessaryPragmaSuppressions";
            public const string RemoveUnreachableCode = "RemoveUnreachableCode";
            public const string RemoveUnusedLocalFunction = "RemoveUnusedLocalFunction";
            public const string RemoveUnusedMembers = "RemoveUnusedMembers";
            public const string RemoveUnusedValues = "RemoveUnusedValues";
            public const string RemoveUnusedVariable = "RemoveUnusedVariable";
            public const string ReplaceDefaultLiteral = "ReplaceDefaultLiteral";
            public const string SimplifyNames = "SimplifyNames";
            public const string SimplifyThisOrMe = "SimplifyThisOrMe";
            public const string SpellCheck = "SpellCheck";
            public const string UnsealClass = "UnsealClass";
            public const string UpdateLegacySuppressions = "UpdateLegacySuppressions";
            public const string UseCollectionInitializer = "UseCollectionInitializer";
            public const string UseExplicitType = "UseExplicitType";
            public const string UseExplicitTypeForConst = "UseExplicitTypeForConst";
            public const string UseExpressionBodyForLambdaCodeFixProvider = "UseExpressionBodyForLambdaCodeFixProvider";
            public const string UseImplicitType = "UseImplicitType";
            public const string UseObjectInitializer = "UseObjectInitializer";
            public const string UseSimpleUsingStatementCodeFixProvider = "UseSimpleUsingStatementCodeFixProvider";
            public const string UseThrowExpression = "UseThrowExpression";
            public const string VisualBasicAddObsoleteAttributeCodeFixProvider = "VisualBasicAddObsoleteAttributeCodeFixProvider";
            public const string VisualBasicConvertAnonymousTypeToTupleCodeFixProvider = "VisualBasicConvertAnonymousTypeToTupleCodeFixProvider";
            public const string VisualBasicFileHeaderCodeFixProvider = "VisualBasicFileHeaderCodeFixProvider";
            public const string VisualBasicMakeClassAbstractCodeFixProvider = "VisualBasicMakeClassAbstractCodeFixProvider";
            public const string VisualBasicUseAutoPropertyCodeFixProvider = "VisualBasicUseAutoPropertyCodeFixProvider";
        }

        public static partial class CSharp
        {
            public const string AddAwait = "AddAwait";
            public const string AddBraces = "AddBraces";
            public const string AddDocCommentNodes = "AddDocCommentNodes";
            public const string AddExplicitCast = "AddExplicitCast";
            public const string AddImport = "AddImport";
            public const string AddMissingReference = "AddMissingReference";
            public const string AddNew = "AddNew";
            public const string AddParameter = "AddParameter";
            public const string AddParenthesesAroundConditionalExpressionInInterpolatedString = "AddParenthesesAroundConditionalExpressionInInterpolatedString";
            public const string AliasAmbiguousType = "AliasAmbiguousType";
            public const string ApplyNamingStyle = "ApplyNamingStyle";
            public const string ChangeReturnType = "ChangeReturnType";
            public const string ChangeToYield = "ChangeToYield";
            public const string ConvertToAsync = "ConvertToAsync";
            public const string CSharpAddObsoleteAttributeCodeFixProvider = "CSharpAddObsoleteAttributeCodeFixProvider";
            public const string CSharpConvertAnonymousTypeToTupleCodeFixProvider = "CSharpConvertAnonymousTypeToTupleCodeFixProvider";
            public const string CSharpConvertTypeOfToNameOfCodeFixProvider = "CSharpConvertTypeOfToNameOfCodeFixProvider";
            public const string CSharpFileHeaderCodeFixProvider = "CSharpFileHeaderCodeFixProvider";
            public const string CSharpMakeClassAbstractCodeFixProvider = "CSharpMakeClassAbstractCodeFixProvider";
            public const string CSharpMakeMemberStaticCodeFixProvider = "CSharpMakeMemberStaticCodeFixProvider";
            public const string CSharpUseAutoPropertyCodeFixProvider = "CSharpUseAutoPropertyCodeFixProvider";
            public const string DeclareAsNullable = "DeclareAsNullable";
            public const string FixFormatting = "FixFormatting";
            public const string FixReturnType = "FixReturnType";
            public const string FullyQualify = "FullyQualify";
            public const string GenerateConstructor = "GenerateConstructor";
            public const string GenerateConversion = "GenerateConversion";
            public const string GenerateDeconstructMethod = "GenerateDeconstructMethod";
            public const string GenerateEnumMember = "GenerateEnumMember";
            public const string GenerateMethod = "GenerateMethod";
            public const string GenerateType = "GenerateType";
            public const string GenerateVariable = "GenerateVariable";
            public const string ImplementAbstractClass = "ImplementAbstractClass";
            public const string ImplementInterface = "ImplementInterface";
            public const string InvokeDelegateWithConditionalAccessCodeFixProvider = "InvokeDelegateWithConditionalAccessCodeFixProvider";
            public const string MakeLocalFunctionStaticCodeFixProvider = "MakeLocalFunctionStaticCodeFixProvider";
            public const string MakeMethodSynchronous = "MakeMethodSynchronous";
            public const string MakeStatementAsynchronous = "MakeStatementAsynchronous";
            public const string MakeStructFieldsWritable = "MakeStructFieldsWritable";
            public const string MoveMisplacedUsingDirectives = "MoveMisplacedUsingDirectives";
            public const string PassInCapturedVariablesAsArgumentsCodeFixProvider = "PassInCapturedVariablesAsArgumentsCodeFixProvider";
            public const string PopulateSwitch = "PopulateSwitch";
            public const string PreferFrameworkType = "PreferFrameworkType";
            public const string QualifyMemberAccess = "QualifyMemberAccess";
            public const string RemoveAsyncModifier = "RemoveAsyncModifier";
            public const string RemoveDocCommentNode = "RemoveDocCommentNode";
            public const string RemoveIn = "RemoveIn";
            public const string RemoveNew = "RemoveNew";
            public const string RemoveUnnecessaryAttributeSuppressions = "RemoveUnnecessaryAttributeSuppressions";
            public const string RemoveUnnecessaryCast = "RemoveUnnecessaryCast";
            public const string RemoveUnnecessaryImports = "RemoveUnnecessaryImports";
            public const string RemoveUnnecessaryPragmaSuppressions = "RemoveUnnecessaryPragmaSuppressions";
            public const string RemoveUnreachableCode = "RemoveUnreachableCode";
            public const string RemoveUnusedLocalFunction = "RemoveUnusedLocalFunction";
            public const string RemoveUnusedMembers = "RemoveUnusedMembers";
            public const string RemoveUnusedValues = "RemoveUnusedValues";
            public const string RemoveUnusedVariable = "RemoveUnusedVariable";
            public const string ReplaceDefaultLiteral = "ReplaceDefaultLiteral";
            public const string SimplifyNames = "SimplifyNames";
            public const string SimplifyThisOrMe = "SimplifyThisOrMe";
            public const string SpellCheck = "SpellCheck";
            public const string UnsealClass = "UnsealClass";
            public const string UpdateLegacySuppressions = "UpdateLegacySuppressions";
            public const string UseCollectionInitializer = "UseCollectionInitializer";
            public const string UseExplicitType = "UseExplicitType";
            public const string UseExplicitTypeForConst = "UseExplicitTypeForConst";
            public const string UseExpressionBodyForLambdaCodeFixProvider = "UseExpressionBodyForLambdaCodeFixProvider";
            public const string UseImplicitType = "UseImplicitType";
            public const string UseObjectInitializer = "UseObjectInitializer";
            public const string UseSimpleUsingStatementCodeFixProvider = "UseSimpleUsingStatementCodeFixProvider";
            public const string UseThrowExpression = "UseThrowExpression";
        }

        public static partial class VisualBasic
        {
            public const string AddAwait = "AddAwait";
            public const string AddExplicitCast = "AddExplicitCast";
            public const string AddImport = "AddImport";
            public const string AddMissingReference = "AddMissingReference";
            public const string AddOverloads = "AddOverloads";
            public const string AddParameter = "AddParameter";
            public const string AliasAmbiguousType = "AliasAmbiguousType";
            public const string ApplyNamingStyle = "ApplyNamingStyle";
            public const string ChangeToYield = "ChangeToYield";
            public const string ConvertToAsync = "ConvertToAsync";
            public const string ConvertToIterator = "ConvertToIterator";
            public const string ConvertTypeOfToNameOf = "ConvertTypeOfToNameOf";
            public const string CorrectNextControlVariable = "CorrectNextControlVariable";
            public const string FixFormatting = "FixFormatting";
            public const string FixIncorrectExitContinue = "FixIncorrectExitContinue";
            public const string FixIncorrectFunctionReturnType = "FixIncorrectFunctionReturnType";
            public const string FullyQualify = "FullyQualify";
            public const string GenerateConstructor = "GenerateConstructor";
            public const string GenerateConversion = "GenerateConversion";
            public const string GenerateEndConstruct = "GenerateEndConstruct";
            public const string GenerateEnumMember = "GenerateEnumMember";
            public const string GenerateEvent = "GenerateEvent";
            public const string GenerateMethod = "GenerateMethod";
            public const string GenerateType = "GenerateType";
            public const string GenerateVariable = "GenerateVariable";
            public const string ImplementAbstractClass = "ImplementAbstractClass";
            public const string ImplementInterface = "ImplementInterface";
            public const string MakeFieldReadonly = "MakeFieldReadonly";
            public const string MakeMethodSynchronous = "MakeMethodSynchronous";
            public const string MoveToTopOfFile = "MoveToTopOfFile";
            public const string PopulateSwitch = "PopulateSwitch";
            public const string PreferFrameworkType = "PreferFrameworkType";
            public const string QualifyMemberAccess = "QualifyMemberAccess";
            public const string RemoveAsyncModifier = "RemoveAsyncModifier";
            public const string RemoveDocCommentNode = "RemoveDocCommentNode";
            public const string RemoveUnnecessaryAttributeSuppressions = "RemoveUnnecessaryAttributeSuppressions";
            public const string RemoveUnnecessaryCast = "RemoveUnnecessaryCast";
            public const string RemoveUnnecessaryImports = "RemoveUnnecessaryImports";
            public const string RemoveUnnecessaryPragmaSuppressions = "RemoveUnnecessaryPragmaSuppressions";
            public const string RemoveUnusedMembers = "RemoveUnusedMembers";
            public const string RemoveUnusedValues = "RemoveUnusedValues";
            public const string RemoveUnusedVariable = "RemoveUnusedVariable";
            public const string SimplifyNames = "SimplifyNames";
            public const string SimplifyThisOrMe = "SimplifyThisOrMe";
            public const string SpellCheck = "SpellCheck";
            public const string UnsealClass = "UnsealClass";
            public const string UpdateLegacySuppressions = "UpdateLegacySuppressions";
            public const string UseCollectionInitializer = "UseCollectionInitializer";
            public const string UseObjectInitializer = "UseObjectInitializer";
            public const string VisualBasicAddObsoleteAttributeCodeFixProvider = "VisualBasicAddObsoleteAttributeCodeFixProvider";
            public const string VisualBasicConvertAnonymousTypeToTupleCodeFixProvider = "VisualBasicConvertAnonymousTypeToTupleCodeFixProvider";
            public const string VisualBasicFileHeaderCodeFixProvider = "VisualBasicFileHeaderCodeFixProvider";
            public const string VisualBasicMakeClassAbstractCodeFixProvider = "VisualBasicMakeClassAbstractCodeFixProvider";
            public const string VisualBasicUseAutoPropertyCodeFixProvider = "VisualBasicUseAutoPropertyCodeFixProvider";
        }
    }

    partial class CodeRefactorings
    {
        public static partial class All
        {
            public const string AddAwait = "AddAwait";
            public const string AddBraces = "AddBraces";
            public const string AddDocCommentNodes = "AddDocCommentNodes";
            public const string AddExplicitCast = "AddExplicitCast";
            public const string AddImport = "AddImport";
            public const string AddMissingReference = "AddMissingReference";
            public const string AddNew = "AddNew";
            public const string AddOverloads = "AddOverloads";
            public const string AddParameter = "AddParameter";
            public const string AddParenthesesAroundConditionalExpressionInInterpolatedString = "AddParenthesesAroundConditionalExpressionInInterpolatedString";
            public const string AliasAmbiguousType = "AliasAmbiguousType";
            public const string ApplyNamingStyle = "ApplyNamingStyle";
            public const string ChangeReturnType = "ChangeReturnType";
            public const string ChangeToYield = "ChangeToYield";
            public const string ConvertToAsync = "ConvertToAsync";
            public const string ConvertToIterator = "ConvertToIterator";
            public const string ConvertTypeOfToNameOf = "ConvertTypeOfToNameOf";
            public const string CorrectNextControlVariable = "CorrectNextControlVariable";
            public const string CSharpAddObsoleteAttributeCodeFixProvider = "CSharpAddObsoleteAttributeCodeFixProvider";
            public const string CSharpConvertAnonymousTypeToTupleCodeFixProvider = "CSharpConvertAnonymousTypeToTupleCodeFixProvider";
            public const string CSharpConvertTypeOfToNameOfCodeFixProvider = "CSharpConvertTypeOfToNameOfCodeFixProvider";
            public const string CSharpFileHeaderCodeFixProvider = "CSharpFileHeaderCodeFixProvider";
            public const string CSharpMakeClassAbstractCodeFixProvider = "CSharpMakeClassAbstractCodeFixProvider";
            public const string CSharpMakeMemberStaticCodeFixProvider = "CSharpMakeMemberStaticCodeFixProvider";
            public const string CSharpUseAutoPropertyCodeFixProvider = "CSharpUseAutoPropertyCodeFixProvider";
            public const string DeclareAsNullable = "DeclareAsNullable";
            public const string FixFormatting = "FixFormatting";
            public const string FixIncorrectExitContinue = "FixIncorrectExitContinue";
            public const string FixIncorrectFunctionReturnType = "FixIncorrectFunctionReturnType";
            public const string FixReturnType = "FixReturnType";
            public const string FullyQualify = "FullyQualify";
            public const string GenerateConstructor = "GenerateConstructor";
            public const string GenerateConversion = "GenerateConversion";
            public const string GenerateDeconstructMethod = "GenerateDeconstructMethod";
            public const string GenerateEndConstruct = "GenerateEndConstruct";
            public const string GenerateEnumMember = "GenerateEnumMember";
            public const string GenerateEvent = "GenerateEvent";
            public const string GenerateMethod = "GenerateMethod";
            public const string GenerateType = "GenerateType";
            public const string GenerateVariable = "GenerateVariable";
            public const string ImplementAbstractClass = "ImplementAbstractClass";
            public const string ImplementInterface = "ImplementInterface";
            public const string InvokeDelegateWithConditionalAccessCodeFixProvider = "InvokeDelegateWithConditionalAccessCodeFixProvider";
            public const string MakeFieldReadonly = "MakeFieldReadonly";
            public const string MakeLocalFunctionStaticCodeFixProvider = "MakeLocalFunctionStaticCodeFixProvider";
            public const string MakeMethodSynchronous = "MakeMethodSynchronous";
            public const string MakeStatementAsynchronous = "MakeStatementAsynchronous";
            public const string MakeStructFieldsWritable = "MakeStructFieldsWritable";
            public const string MoveMisplacedUsingDirectives = "MoveMisplacedUsingDirectives";
            public const string MoveToTopOfFile = "MoveToTopOfFile";
            public const string PassInCapturedVariablesAsArgumentsCodeFixProvider = "PassInCapturedVariablesAsArgumentsCodeFixProvider";
            public const string PopulateSwitch = "PopulateSwitch";
            public const string PreferFrameworkType = "PreferFrameworkType";
            public const string QualifyMemberAccess = "QualifyMemberAccess";
            public const string RemoveAsyncModifier = "RemoveAsyncModifier";
            public const string RemoveDocCommentNode = "RemoveDocCommentNode";
            public const string RemoveIn = "RemoveIn";
            public const string RemoveNew = "RemoveNew";
            public const string RemoveUnnecessaryAttributeSuppressions = "RemoveUnnecessaryAttributeSuppressions";
            public const string RemoveUnnecessaryCast = "RemoveUnnecessaryCast";
            public const string RemoveUnnecessaryImports = "RemoveUnnecessaryImports";
            public const string RemoveUnnecessaryPragmaSuppressions = "RemoveUnnecessaryPragmaSuppressions";
            public const string RemoveUnreachableCode = "RemoveUnreachableCode";
            public const string RemoveUnusedLocalFunction = "RemoveUnusedLocalFunction";
            public const string RemoveUnusedMembers = "RemoveUnusedMembers";
            public const string RemoveUnusedValues = "RemoveUnusedValues";
            public const string RemoveUnusedVariable = "RemoveUnusedVariable";
            public const string ReplaceDefaultLiteral = "ReplaceDefaultLiteral";
            public const string SimplifyNames = "SimplifyNames";
            public const string SimplifyThisOrMe = "SimplifyThisOrMe";
            public const string SpellCheck = "SpellCheck";
            public const string UnsealClass = "UnsealClass";
            public const string UpdateLegacySuppressions = "UpdateLegacySuppressions";
            public const string UseCollectionInitializer = "UseCollectionInitializer";
            public const string UseExplicitType = "UseExplicitType";
            public const string UseExplicitTypeForConst = "UseExplicitTypeForConst";
            public const string UseExpressionBodyForLambdaCodeFixProvider = "UseExpressionBodyForLambdaCodeFixProvider";
            public const string UseImplicitType = "UseImplicitType";
            public const string UseObjectInitializer = "UseObjectInitializer";
            public const string UseSimpleUsingStatementCodeFixProvider = "UseSimpleUsingStatementCodeFixProvider";
            public const string UseThrowExpression = "UseThrowExpression";
            public const string VisualBasicAddObsoleteAttributeCodeFixProvider = "VisualBasicAddObsoleteAttributeCodeFixProvider";
            public const string VisualBasicConvertAnonymousTypeToTupleCodeFixProvider = "VisualBasicConvertAnonymousTypeToTupleCodeFixProvider";
            public const string VisualBasicFileHeaderCodeFixProvider = "VisualBasicFileHeaderCodeFixProvider";
            public const string VisualBasicMakeClassAbstractCodeFixProvider = "VisualBasicMakeClassAbstractCodeFixProvider";
            public const string VisualBasicUseAutoPropertyCodeFixProvider = "VisualBasicUseAutoPropertyCodeFixProvider";
        }

        public static partial class CSharp
        {
            public const string AddAwaitCodeActionProvider = "Add Await Code Action Provider";
            public const string AddBannerToFileCodeActionProvider = "Add Banner To File Code Action Provider";
            public const string AddMissingImportsOnPasteCodeActionProvider = "Add Missing Imports On Paste Code Action Provider";
            public const string AddParametersFromMembersCodeActionProvider = "Add Parameters From Members Code Action Provider";
            public const string ChangeSignatureCodeActionProvider = "Change Signature Code Action Provider";
            public const string ConvertToInterpolatedStringCodeActionProvider = "Convert To Interpolated String Code Action Provider";
            public const string ConvertAnonymousTypeToClass = "ConvertAnonymousTypeToClass";
            public const string ConvertTupleToStruct = "ConvertTupleToStruct";
            public const string CSharpAddDebuggerDisplayCodeRefactoringProvider = "CSharpAddDebuggerDisplayCodeRefactoringProvider";
            public const string CSharpAddParameterCheckCodeRefactoringProvider = "CSharpAddParameterCheckCodeRefactoringProvider";
            public const string CSharpConvertAutoPropertyToFullPropertyCodeRefactoringProvider = "CSharpConvertAutoPropertyToFullPropertyCodeRefactoringProvider";
            public const string CSharpConvertForEachToForCodeRefactoringProvider = "CSharpConvertForEachToForCodeRefactoringProvider";
            public const string CSharpConvertForEachToLinqQueryProvider = "CSharpConvertForEachToLinqQueryProvider";
            public const string CSharpConvertForToForEachCodeRefactoringProvider = "CSharpConvertForToForEachCodeRefactoringProvider";
            public const string CSharpConvertIfToSwitchCodeRefactoringProvider = "CSharpConvertIfToSwitchCodeRefactoringProvider";
            public const string CSharpConvertLinqQueryToForEachProvider = "CSharpConvertLinqQueryToForEachProvider";
            public const string CSharpConvertLocalFunctionToMethodCodeRefactoringProvider = "CSharpConvertLocalFunctionToMethodCodeRefactoringProvider";
            public const string CSharpConvertNumericLiteralCodeRefactoringProvider = "CSharpConvertNumericLiteralCodeRefactoringProvider";
            public const string CSharpInitializeMemberFromParameterCodeRefactoringProvider = "CSharpInitializeMemberFromParameterCodeRefactoringProvider";
            public const string CSharpNameTupleElementCodeRefactoringProvider = "CSharpNameTupleElementCodeRefactoringProvider";
            public const string CSharpUseNamedArgumentsCodeRefactoringProvider = "CSharpUseNamedArgumentsCodeRefactoringProvider";
            public const string EncapsulateField = "Encapsulate Field";
            public const string ExtractInterfaceCodeActionProvider = "Extract Interface Code Action Provider";
            public const string ExtractMethodCodeActionProvider = "Extract Method Code Action Provider";
            public const string ExtractClass = "ExtractClass";
            public const string GenerateConstructorFromMembersCodeActionProvider = "Generate Constructor From Members Code Action Provider";
            public const string GenerateDefaultConstructorsCodeActionProvider = "Generate Default Constructors Code Action Provider";
            public const string GenerateEqualsandGetHashCodeCodeActionProvider = "Generate Equals and GetHashCode Code Action Provider";
            public const string GenerateOverridesCodeActionProvider = "Generate Overrides Code Action Provider";
            public const string InlineTemporaryCodeActionProvider = "Inline Temporary Code Action Provider";
            public const string InlineMethod = "InlineMethod";
            public const string IntroduceUsingStatementCodeActionProvider = "Introduce Using Statement Code Action Provider";
            public const string IntroduceVariableCodeActionProvider = "Introduce Variable Code Action Provider";
            public const string InvertConditionalCodeActionProvider = "Invert Conditional Code Action Provider";
            public const string InvertIfCodeActionProvider = "Invert If Code Action Provider";
            public const string InvertLogicalCodeActionProvider = "Invert Logical Code Action Provider";
            public const string MakeLocalFunctionStaticCodeRefactoringProvider = "MakeLocalFunctionStaticCodeRefactoringProvider";
            public const string MergeConsecutiveIfStatementsCodeActionProvider = "Merge Consecutive If Statements Code Action Provider";
            public const string MergeNestedIfStatementsCodeActionProvider = "Merge Nested If Statements Code Action Provider";
            public const string MoveDeclarationNearReferenceCodeActionProvider = "Move Declaration Near Reference Code Action Provider";
            public const string MoveToNamespaceCodeActionProvider = "Move To Namespace Code Action Provider";
            public const string MoveTypeToFileCodeActionProvider = "Move Type To File Code Action Provider";
            public const string PullMemberUp = "PullMemberUp";
            public const string ReplaceDocumentationCommentTextWithTagCodeActionProvider = "Replace Documentation Comment Text With Tag Code Action Provider";
            public const string ReplaceMethodWithPropertyCodeRefactoringProvider = "ReplaceMethodWithPropertyCodeRefactoringProvider";
            public const string ReplacePropertyWithMethodsCodeRefactoringProvider = "ReplacePropertyWithMethodsCodeRefactoringProvider";
            public const string SplitIntoConsecutiveIfStatementsCodeActionProvider = "Split Into Consecutive If Statements Code Action Provider";
            public const string SplitIntoNestedIfStatementsCodeActionProvider = "Split Into Nested If Statements Code Action Provider";
            public const string SyncNamespaceandFolderNameCodeActionProvider = "Sync Namespace and Folder Name Code Action Provider";
            public const string UseExplicitTypeCodeActionProvider = "Use Explicit Type Code Action Provider";
            public const string UseExpressionBodyCodeActionProvider = "Use Expression Body Code Action Provider";
            public const string UseImplicitTypeCodeActionProvider = "Use Implicit Type Code Action Provider";
            public const string UseExpressionBodyForLambdaCodeRefactoringProvider = "UseExpressionBodyForLambdaCodeRefactoringProvider";
            public const string WrappingCodeActionProvider = "Wrapping Code Action Provider";
        }

        public static partial class VisualBasic
        {
            public const string AddAwaitCodeActionProvider = "Add Await Code Action Provider";
            public const string AddBannerToFileCodeActionProvider = "Add Banner To File Code Action Provider";
            public const string AddMissingImportsOnPasteCodeActionProvider = "Add Missing Imports On Paste Code Action Provider";
            public const string AddParametersFromMembersCodeActionProvider = "Add Parameters From Members Code Action Provider";
            public const string ChangeSignatureCodeActionProvider = "Change Signature Code Action Provider";
            public const string ConvertAnonymousTypetoClassCodeActionProvider = "Convert Anonymous Type to Class Code Action Provider";
            public const string ConvertTupletoStructCodeActionProvider = "Convert Tuple to Struct Code Action Provider";
            public const string EncapsulateField = "Encapsulate Field";
            public const string ExtractInterfaceCodeActionProvider = "Extract Interface Code Action Provider";
            public const string ExtractMethodCodeActionProvider = "Extract Method Code Action Provider";
            public const string GenerateConstructorFromMembersCodeActionProvider = "Generate Constructor From Members Code Action Provider";
            public const string GenerateDefaultConstructorsCodeActionProvider = "Generate Default Constructors Code Action Provider";
            public const string GenerateEqualsandGetHashCodeCodeActionProvider = "Generate Equals and GetHashCode Code Action Provider";
            public const string GenerateOverridesCodeActionProvider = "Generate Overrides Code Action Provider";
            public const string InlineTemporaryCodeActionProvider = "Inline Temporary Code Action Provider";
            public const string InlineMethod = "InlineMethod";
            public const string IntroduceUsingStatementCodeActionProvider = "Introduce Using Statement Code Action Provider";
            public const string IntroduceVariableCodeActionProvider = "Introduce Variable Code Action Provider";
            public const string InvertConditionalCodeActionProvider = "Invert Conditional Code Action Provider";
            public const string InvertIfCodeActionProvider = "Invert If Code Action Provider";
            public const string InvertLogicalCodeActionProvider = "Invert Logical Code Action Provider";
            public const string MergeConsecutiveIfStatementsCodeActionProvider = "Merge Consecutive If Statements Code Action Provider";
            public const string MergeNestedIfStatementsCodeActionProvider = "Merge Nested If Statements Code Action Provider";
            public const string MoveDeclarationNearReferenceCodeActionProvider = "Move Declaration Near Reference Code Action Provider";
            public const string MoveTypeToFileCodeActionProvider = "Move Type To File Code Action Provider";
            public const string ReplaceDocumentationCommentTextWithTagCodeActionProvider = "Replace Documentation Comment Text With Tag Code Action Provider";
            public const string ReplaceMethodWithPropertyCodeRefactoringProvider = "ReplaceMethodWithPropertyCodeRefactoringProvider";
            public const string ReplacePropertyWithMethodsCodeRefactoringProvider = "ReplacePropertyWithMethodsCodeRefactoringProvider";
            public const string SplitIntoConsecutiveIfStatementsCodeActionProvider = "Split Into Consecutive If Statements Code Action Provider";
            public const string SplitIntoNestedIfStatementsCodeActionProvider = "Split Into Nested If Statements Code Action Provider";
            public const string VisualBasicAddDebuggerDisplayCodeRefactoringProvider = "VisualBasicAddDebuggerDisplayCodeRefactoringProvider";
            public const string VisualBasicAddParameterCheckCodeRefactoringProvider = "VisualBasicAddParameterCheckCodeRefactoringProvider";
            public const string VisualBasicConvertAutoPropertyToFullPropertyCodeRefactoringProvider = "VisualBasicConvertAutoPropertyToFullPropertyCodeRefactoringProvider";
            public const string VisualBasicConvertForEachToForCodeRefactoringProvider = "VisualBasicConvertForEachToForCodeRefactoringProvider";
            public const string VisualBasicConvertForToForEachCodeRefactoringProvider = "VisualBasicConvertForToForEachCodeRefactoringProvider";
            public const string VisualBasicConvertIfToSwitchCodeRefactoringProvider = "VisualBasicConvertIfToSwitchCodeRefactoringProvider";
            public const string VisualBasicConvertNumericLiteralCodeRefactoringProvider = "VisualBasicConvertNumericLiteralCodeRefactoringProvider";
            public const string VisualBasicInitializeMemberFromParameterCodeRefactoringProvider = "VisualBasicInitializeMemberFromParameterCodeRefactoringProvider";
            public const string VisualBasicNameTupleElementCodeRefactoringProvider = "VisualBasicNameTupleElementCodeRefactoringProvider";
            public const string VisualBasicUseNamedArgumentsCodeRefactoringProvider = "VisualBasicUseNamedArgumentsCodeRefactoringProvider";
            public const string WrappingCodeActionProvider = "Wrapping Code Action Provider";
        }
    }
}
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member

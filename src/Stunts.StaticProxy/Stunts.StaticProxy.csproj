<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;net5.0</TargetFrameworks>
    <RootNamespace>Stunts</RootNamespace>
    <IsPackable>true</IsPackable>
    <Description>
      An extensible source generator library for arbitrary stunt code generation 
      during compile-time.
    </Description>
    <PackageTags>dotnet roslyn proxy generator</PackageTags>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsPackable)' != 'true'">
    <PackFolder>tools\$(TargetFramework)</PackFolder>
    <DisableTransitiveProjectReferences>true</DisableTransitiveProjectReferences>
    <DisableTransitiveFrameworkReferences>true</DisableTransitiveFrameworkReferences>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Common" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic" />

    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Features" />

    <!-- Workaround for revision mismatch with public versions -->
    <PackageReference Include="System.Collections.Immutable" />
    <PackageReference Include="System.Reflection.Metadata" />

    <PackageReference Include="System.ComponentModel.Composition" />
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" />
    <PackageReference Include="Microsoft.Bcl.HashCode" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Stunts\Stunts.csproj" />
    <ProjectReference Include="..\Stunts.CodeAnalysis\Stunts.CodeAnalysis.csproj" Pack="!$(IsPackable)" />
  </ItemGroup>

  <ItemGroup Condition="'$(IsPackable)' != 'true'">
    <PackageReference Update="@(PackageReference)" Pack="false" />
    <ProjectReference Update="@(ProjectReference)" Pack="false" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Stunts.UnitTests" />
  </ItemGroup>

  <!-- Replaced by common targets, required for the multitargeting DependsOnTargets below -->
  <Target Name="ResolveReferences" />
  <Target Name="AddDependencies"  Condition="'$(IsPackable)' != 'true'"
          AfterTargets="Build" BeforeTargets="GetPackageContents" DependsOnTargets="ResolveReferences">
    <ItemGroup Condition="'$(TargetFramework)' != ''">
      <AnalyzerFile Include="@(ReferenceCopyLocalPaths)"
                    Exclude="'%(Filename)%(Extension)' == 'Microsoft.CodeAnalysis.dll' or 
                             '%(Filename)%(Extension)' == 'Microsoft.CodeAnalysis.CSharp.dll' or 
                             '%(Filename)%(Extension)' == 'Microsoft.CodeAnalysisVisualBasic.dll'"
                    Condition="'%(ReferenceCopyLocalPaths.AssetType)' != 'resources'"/>
      <PackageFile Include="@(AnalyzerFile -> '%(FullPath)')" PackagePath="tools\$(TargetFramework)\%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

</Project>
